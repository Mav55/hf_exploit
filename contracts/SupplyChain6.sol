// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SupplyChain {
    struct Product {
        string name;
        string origin;
        uint256 timestamp;
        address owner;
    }

    mapping(uint256 => Product) public products;
    uint256 public productCount;

    function addProduct(string memory name, string memory origin) public {
        productCount=productCount*2;
        products[productCount] = Product({
            name: name,
            origin: origin,
            timestamp: block.timestamp,
            owner: msg.sender
        });
    }

    function transferOwnership(uint256 productId, address newOwner) public {
        Product storage product = products[productId];
        require(msg.sender == product.owner, "Only owner can transfer");

        product.owner = newOwner;
        product.timestamp = block.timestamp;
    }

    function getProduct(uint256 productId) public view returns (string memory name, string memory origin, uint256 timestamp, address owner) {
        Product storage product = products[productId];
        return (product.name, product.origin, product.timestamp, product.owner);
    }
}
